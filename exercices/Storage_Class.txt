Q:
--
How many StorageClasses exist in the cluster right now ?


A:
--
controlplane ~ ➜  kubectl get storageclasses

NAME                        PROVISIONER                     RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
local-path (default)        rancher.io/local-path           Delete          WaitForFirstConsumer   false                  7m19s
local-storage               kubernetes.io/no-provisioner    Delete          WaitForFirstConsumer   false                  5s
portworx-io-priority-high   kubernetes.io/portworx-volume   Delete          Immediate              false                  5s


===============================================================================================================================

Q:
--
What is the name of the Storage Class that does not support dynamic volume provisioning ?


A:
--
Look for the storage class name that uses no-provisioner
The local-storage storage class makes use of the no-provisioner and currently does not support dynamic provisioning.

Refer to the tab above the terminal (called Local Storage) to read more about it.


===============================================================================================================================

Q:
--
What is the Volume Binding Mode used for this storage class (the one identified in the previous question) ?


A:
--
controlplane ~ ➜  kubectl get storageclasses

NAME                        PROVISIONER                     RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
local-path (default)        rancher.io/local-path           Delete          WaitForFirstConsumer   false                  7m19s
local-storage               kubernetes.io/no-provisioner    Delete          WaitForFirstConsumer   false                  5s
portworx-io-priority-high   kubernetes.io/portworx-volume   Delete          Immediate              false                  5s


===============================================================================================================================

Q:
--
What is the Provisioner used for the storage class called portworx-io-priority-high ?


A:
--
Run the command: kubectl describe sc portworx-io-priority-high or kubectl get sc portworx-io-priority-high and look under the PROVISIONER section.


controlplane ~ ➜  kubectl describe sc portworx-io-priority-high
Name:            portworx-io-priority-high
IsDefaultClass:  No
Annotations:     kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"storage.k8s.io/v1","kind":"StorageClass","metadata":{"annotations":{},"name":"portworx-io-priority-high"},"parameters":{"priority_io":"high","repl":"1","snap_interval":"70"},"provisioner":"kubernetes.io/portworx-volume"}

Provisioner:           kubernetes.io/portworx-volume
Parameters:            priority_io=high,repl=1,snap_interval=70
AllowVolumeExpansion:  <unset>
MountOptions:          <none>
ReclaimPolicy:         Delete
VolumeBindingMode:     Immediate
Events:                <none>


===============================================================================================================================

Q:
--
Is there a PersistentVolumeClaim that is consuming the PersistentVolume called local-pv ?


A:
--
Run the command: kubectl get pvc and inspect it.


controlplane ~ ➜  kubectl get pvc
No resources found in default namespace.                                                    42s


===============================================================================================================================

Q:
--
Let's fix that. Create a new PersistentVolumeClaim by the name of local-pvc that should bind to the volume local-pv.
Inspect the pv local-pv for the specs.


PVC: local-pvc
Correct Access Mode?
Correct StorageClass Used?
PVC requests volume size = 500Mi?


A:
--
Inspect the persistent volume and look for the Access Mode, Storage and StorageClassName used. Use this information to create the PVC.

controlplane ~ ➜  vi local-pvc.yaml

```
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: local-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 500Mi
```


controlplane ~ ➜  kubectl create -f local-pvc.yaml 
persistentvolumeclaim/local-pvc created


===============================================================================================================================

Q:
--
What is the status of the newly created Persistent Volume Claim ?


A:
--
controlplane ~ ➜  kubectl get persistentvolumeclaims 
NAME        STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS    AGE
local-pvc   Pending                                      local-storage   28s                                                    


===============================================================================================================================

Q:
--
Why is the PVC in a pending state despite making a valid request to claim the volume called local-pv ?

Inspect the PVC events.


A:
--
A Pod consuming the volume is not scheduled


Run the command: kubectl describe pvc local-pvc and look under the Events section.

The StorageClass used by the PVC uses WaitForFirstConsumer volume binding mode. 
This means that the persistent volume will not bind to the claim until a pod makes use of the PVC to request storage.

controlplane ~ ➜  kubectl describe pvc local-pvc | grep -A3 Events
Events:
  Type    Reason                Age                From                         Message
  ----    ------                ----               ----                         -------
  Normal  WaitForFirstConsumer  14s (x6 over 85s)  persistentvolume-controller  waiting for first consumer to be created before binding


===============================================================================================================================
===============================================================================================================================
===============================================================================================================================

The Storage Class called local-storage makes use of VolumeBindingMode set to WaitForFirstConsumer. 
This will delay the binding and provisioning of a PersistentVolume until a Pod using the PersistentVolumeClaim is created.


===============================================================================================================================
===============================================================================================================================
===============================================================================================================================

Q:
--
Create a new pod called nginx with the image nginx:alpine. 
The Pod should make use of the PVC local-pvc and mount the volume at the path /var/www/html.

The PV local-pv should in a bound state.


Pod created with the correct Image?
Pod uses PVC called local-pvc?
local-pv bound?
nginx pod running?
Volume mounted at the correct path?


A:
--
Use the command kubectl run to create a pod definition file for nginx pod with image nginx:alpine. 
Add mount volume path /var/www/html and pvc given in the details.

Alternatively, run the command:

kubectl run nginx --image=nginx:alpine --dry-run=client -oyaml > nginx.yaml


controlplane ~ ➜  vi nginx.yaml 

```
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  containers:
  - name: nginx
    image: nginx:alpine
    volumeMounts:
      - name: local-persistent-storage
        mountPath: /var/www/html
  volumes:
    - name: local-persistent-storage
      persistentVolumeClaim:
        claimName: local-pvc
```

controlplane ~ ➜  kubectl create -f nginx.yaml 
pod/nginx created


===============================================================================================================================

Q:
--
What is the status of the local-pvc Persistent Volume Claim now ?


A:
--
controlplane ~ ➜  kubectl get persistentvolumeclaims 
NAME        STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS    AGE
local-pvc   Bound    local-pv   500Mi      RWO            local-storage   5m40s


===============================================================================================================================

Q:
--
Create a new Storage Class called delayed-volume-sc that makes use of the below specs:

provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer


Storage Class uses: kubernetes.io/no-provisioner ?
Storage Class volumeBindingMode set to WaitForFirstConsumer ?


A:
--
controlplane ~ ➜  vi delayed-volume-sc.yaml

```
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: delayed-volume-sc
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
```

controlplane ~ ➜  kubectl create -f delayed-volume-sc.yaml 
storageclass.storage.k8s.io/delayed-volume-sc created