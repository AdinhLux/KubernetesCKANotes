Q:
--
Where is the default kubeconfig file located in the current environment ?

Find the current home directory by looking at the HOME environment variable.


A:
--
Use the command ls -a and look for the kube config file under /root/.kube

$ ls -a /root/.kube
.  ..  cache  config


===============================================================================================================================

Q:
--
How many clusters are defined in the default kubeconfig file ?


A:
--
Run kubectl config view as our config is in the default folder
$ kubectl config view

```
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://controlplane:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
```


===============================================================================================================================

Q:
--
A new kubeconfig file named my-kube-config is created. 
It is placed in the /root directory. How many clusters are defined in that kubeconfig file?


A:
--
$ kubectl config view --kubeconfig my-kube-config

```
apiVersion: v1
clusters:
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: development
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: kubernetes-on-aws
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: production
- cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443
  name: test-cluster-1
contexts:
- context:
    cluster: kubernetes-on-aws
    user: aws-user
  name: aws-user@kubernetes-on-aws
- context:
    cluster: test-cluster-1
    user: dev-user
  name: research
- context:
    cluster: development
    user: test-user
  name: test-user@development
- context:
    cluster: production
    user: test-user
  name: test-user@production
current-context: test-user@development
kind: Config
preferences: {}
users:
- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key
- name: dev-user
  user:
    client-certificate: /etc/kubernetes/pki/users/dev-user/developer-user.crt
    client-key: /etc/kubernetes/pki/users/dev-user/dev-user.key
- name: test-user
  user:
    client-certificate: /etc/kubernetes/pki/users/test-user/test-user.crt
    client-key: /etc/kubernetes/pki/users/test-user/test-user.key
```


===============================================================================================================================

Q:
--
I would like to use the dev-user to access test-cluster-1. Set the current context to the right one so I can do that.
Once the right context is identified, use the kubectl config use-context command.


A:
--
As dev-user is already configured for the right cluster, we just have to select the context

To use that context, run the command: kubectl config --kubeconfig=/root/my-kube-config use-context research
To know the current context, run the command: kubectl config --kubeconfig=/root/my-kube-config current-context


controlplane ~ ➜  kubectl config --kubeconfig=/root/my-kube-config current-context
test-user@development

controlplane ~ ➜  kubectl config --kubeconfig=/root/my-kube-config use-context research
Switched to context "research".

controlplane ~ ➜  kubectl config --kubeconfig=/root/my-kube-config current-context
research


===============================================================================================================================

Q:
--
We don't want to have to specify the kubeconfig file option on each command. 
Make the my-kube-config file the default kubeconfig.

A:
--
Replace the contents in the default kubeconfig file with the content from my-kube-config file.

$ kubectl config view --kubeconfig my-kube-config > /root/.kube/config


===============================================================================================================================

Q:
--
With the current-context set to research, we are trying to access the cluster. However something seems to be wrong. Identify and fix the issue.

Try running the kubectl get pods command and look for the error. All users certificates are stored at /etc/kubernetes/pki/users.


A:
--
The path to certificate is incorrect in the kubeconfig file. Correct the certificate name which is available at /etc/kubernetes/pki/users/.

controlplane ~ ✖ kubectl get pods
error: unable to read client-cert /etc/kubernetes/pki/users/dev-user/developer-user.crt for dev-user due to open /etc/kubernetes/pki/users/dev-user/developer-user.crt: no such file or directory


controlplane ~ ➜ vi /root/.kube/config

```
users:
- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key
- name: dev-user
  user:
    client-certificate: /etc/kubernetes/pki/users/dev-user/developer-user.crt
    client-key: /etc/kubernetes/pki/users/dev-user/dev-user.key
- name: test-user
  user:
    client-certificate: /etc/kubernetes/pki/users/test-user/test-user.crt
    client-key: /etc/kubernetes/pki/users/test-user/test-user.key
```

```
users:
- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key
- name: dev-user
  user:
    client-certificate: /etc/kubernetes/pki/users/dev-user/dev-user.crt
    client-key: /etc/kubernetes/pki/users/dev-user.key
- name: test-user
  user:
    client-certificate: /etc/kubernetes/pki/users/test-user/test-user.crt
    client-key: /etc/kubernetes/pki/users/test-user/test-user.key
```

controlplane ~ ➜  ls -l /etc/kubernetes/pki/users/
total 12
drwxr-xr-x 2 root root 4096 Mar 14 10:53 aws-user
drwxr-xr-x 2 root root 4096 Mar 14 10:53 dev-user
drwxr-xr-x 2 root root 4096 Mar 14 10:53 test-user
*
controlplane ~ ➜  ls -l /etc/kubernetes/pki/users/dev-user/
total 12
-rw-r--r-- 1 root root 1025 Mar 20 06:33 dev-user.crt
-rw-r--r-- 1 root root  924 Mar 20 06:33 dev-user.csr
-rw------- 1 root root 1679 Mar 20 06:33 dev-user.key


===============================================================================================================================
