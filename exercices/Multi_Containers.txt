Q:
--
Create a multi-container pod with 2 containers. Use the spec given below.
If the pod goes into the crashloopbackoff then add the command sleep 1000 in the lemon container.


Name: yellow
Container 1 Name: lemon
Container 1 Image: busybox
Container 2 Name: gold
Container 2 Image: redis


A:
--

- Create yaml file in IMPERATIVE approach with 1st image
- Edit it
- Force update

$ kubectl run yellow --image=busybox --dry-run=client -o yaml > yellow-pod.yaml
$ vi yellow-pod.yaml

```
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: yellow
  name: yellow
spec:
  containers:
  - image: busybox
    name: lemon
    command:
      - sleep
      - "1000"
  - image: redis
    name: gold
  dnsPolicy: ClusterFirst
  restartPolicy: Always
```

$ kubectl replace --force -f yellow-pod.yaml 


===============================================================================================================================

Q:
--
The app POD application outputs logs to the file /log/app.log. 
View the logs and try to identify the user having issues with Login.


A:
--
$ kubectl -n elastic-stack exec -it app -- cat /log/app.log


===============================================================================================================================

Q:
--
Edit the pod to add a sidecar container to send logs to Elastic Search. Mount the log volume to the sidecar container.
Only add a new container. Do not modify anything else. Use the spec provided below.


Note: State persistence concepts are discussed in detail later in this course. For now please make use of the below documentation link for updating the concerning pod.
https://kubernetes.io/docs/tasks/access-application-cluster/communicate-containers-same-pod-shared-volume/


Name: app
Container Name: sidecar
Container Image: kodekloud/filebeat-configured
Volume Mount: log-volume
Mount Path: /var/log/event-simulator/
Existing Container Name: app
Existing Container Image: kodekloud/event-simulator

	     O
	    | |
		---
	
         ^
	     |

 ##################        ###################                    ###########  
 #				  #        #                 #                    #         #    
 #     Kibana     #  <--   #  ElasticSearch  #         <--------- # APP POD #  
 #				  #        #                 #                  | #         #     
 ##################        ###################                  | ###########
																|
																| 
															 Sidecar
															 Filebeat
															 
															 
A:
--
$ kubectl -n elastic-stack get pod app -o yaml > app-pod.yaml
$ vi app-pod.yaml

```
apiVersion: v1
kind: Pod
metadata:
  name: app
  namespace: elastic-stack
  labels:
    name: app
spec:
  containers:
  - name: app
    image: kodekloud/event-simulator
    volumeMounts:
    - mountPath: /log
      name: log-volume

  - name: sidecar
    image: kodekloud/filebeat-configured
    volumeMounts:
    - mountPath: /var/log/event-simulator/
      name: log-volume

  volumes:
  - name: log-volume
    hostPath:
      # directory location on host
      path: /var/log/webapp
      # this field is optional
      type: DirectoryOrCreate
```

$ kubectl replace -n elastic-stack --force -f app-pod.yaml